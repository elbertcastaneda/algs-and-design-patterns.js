"use strict";(()=>{var H=o=>{for(let e=0;e<o.length-1;e++){let s=!1;for(let l=0;l<o.length-1-e;l++)if(o[l]<o[l+1]){let c=o[l+1];o[l+1]=o[l],o[l]=c,s=!0}if(!s)break}},b=H;var v=class{constructor(e){this.value=e,this.nextNode=null}},d=class{constructor(){this.head=null,this.size=0}insertAtHead(e){let s=new v(e);s.nextNode=this.head,this.head=s,this.size++}add(e){let s=new v(e);if(!this.head)this.head=s;else{let l=this.head;for(;l.nextNode;)l=l.nextNode;l.nextNode=s}this.size++}forEach(e){let s=this.head;if(!!s)for(e(s.value);s.nextNode;)s=s.nextNode,e(s.value)}print(){this.forEach(e=>{console.log(e)})}mergeWith(e){return d.merge(this,e)}static merge(e,s){let l=Math.max(e.size,s.size),c=e.head,i=s.head,r=new d;for(let u=0;u<l;u++){let t=c.value,n=i.value;if(t>n){let a=t;t=n,n=a}typeof t<"u"&&r.add(t),typeof n<"u"&&r.add(n),c=c.nextNode||{},i=i.nextNode||{}}return r}};var N=o=>{let e={},s=Math.max(o.map(t=>t.length)),l=(t,n)=>{if(t<0||n<0||t>=o.length||n>=s)return null;e[t]=e[t]||{};let a=e[t][n];return a||(e[t][n]={value:o[t][n],visited:!1},e[t][n])},c=t=>o.forEach((n,a)=>{n.forEach((m,h)=>{t(m,a,h)})}),i=(t,n,{i:a=0,j:m=0})=>{let h=l(t+a,n+m);return h&&!h.visited&&h.value===1},r=(t,n)=>{let a=l(t,n);if(!a)return;a.visited=!0,i(t,n,{i:-1})&&r(t-1,n),i(t,n,{j:1})&&r(t,n+1),i(t,n,{i:1})&&r(t+1,n),i(t,n,{j:-1})&&r(t,n-1)},u=0;return c((t,n,a)=>{t===1&&!l(n,a).visited&&(r(n,a),u++)}),u},A=N;var z=o=>{for(let e=0;e<o.length/2;e++){let s=o[e];o[e]=o[o.length-e-1],o[o.length-e-1]=s}},x=z;var w=[3,15,8,6,99,2,1,77];console.log(w);b(w);console.log(w);console.log(" ----- reverse ----");console.log(x([1,2,3,4,5,6,7,8,9]));console.log(x(["a","b","c","d","e","f"]));console.log("---------- LinkedList ----------");var p=new d;p.add(3);p.add(15);p.print();var g=new d;g.add(1);g.add(4);g.add(14);g.print();console.log("---------- LinkedList insertAtHead ----------");var f=new d;f.insertAtHead(5);f.insertAtHead(10);f.insertAtHead(2);f.insertAtHead(12);f.insertAtHead(19);f.insertAtHead(20);f.print();console.log("---------- LinkedList merge ----------");d.merge(p,g).print();p.mergeWith(g).print();console.log("---------- findIslands ----------");var G=[[1,1,1,0,1,1,1],[1,1,1,0,1,1,1],[1,1,1,0,1,1,1],[0,0,0,0,0,0,0],[1,1,1,0,0,1,1],[1,1,1,0,1,1,1],[1,1,1,0,1,1,1]];console.table(G);var I=A(G);console.log("count islands: ",I);})();
